# -*- coding: utf-8 -*-
"""UTS_Summary.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16IRWrH61db5sEIqaXfhF1NFcxoDLywxa

1. Install Modul Koneksi ke Dataset yang tersimpan di GDrive
"""

!pip install -U -q PyDrive2

from pydrive2.auth import GoogleAuth

from pydrive2.drive import GoogleDrive

from google.colab import auth

from oauth2client.client import GoogleCredentials

auth.authenticate_user()

gauth = GoogleAuth()

gauth.credentials = GoogleCredentials.get_application_default()

drive = GoogleDrive(gauth)

"""2. Hubungkan dengan Dataset Level Soal UTS dari Masing-masing Dosen"""

#https://drive.google.com/file/d/17neAMf7-_ByqOdm_ILfcmRIxGjHZcInv/view?usp=sharing
fileDownloaded3 = drive.CreateFile({'id':'17neAMf7-_ByqOdm_ILfcmRIxGjHZcInv'})

"""3. Import Library yang umum digunakan"""

import os
import numpy as np
import pandas as pd

"""4. Tampilkan dataset Level Soal yang diberikan oleh Para Dosen"""

fileDownloaded3.GetContentFile('soal_dosen.csv')
# Load the dataset
file_path3 = 'soal_dosen.csv'  # Update with your file path
df_dosen = pd.read_csv(file_path3)
df_dosen

"""5. Visualisasikan data tersebut"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load data
#df = pd.read_csv("soal_dosen.csv")

# Pisahkan level soal yang dipisah koma, lalu flatten
all_levels = df_dosen["Level Soal"].dropna().str.split(",").explode().str.strip()

# Hitung frekuensi tiap level
level_counts = all_levels.value_counts().sort_index()

# Visualisasi
plt.figure(figsize=(8, 5))
sns.barplot(x=level_counts.index, y=level_counts.values, palette="coolwarm")
plt.title("Distribusi Level Soal Kognitif (C1â€“C6)")
plt.xlabel("Level Kognitif")
plt.ylabel("Jumlah Kemunculan")
plt.grid(axis='y', linestyle='--', alpha=0.7)

# Tambahkan label di atas bar
for i, val in enumerate(level_counts.values):
    plt.text(i, val + 0.2, str(val), ha='center', va='bottom')

plt.tight_layout()
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load data
#df = pd.read_csv("soal_dosen.csv")

# Pisahkan Level Soal yang dipisah koma, lalu explode
df_dosen["Level Soal"] = df_dosen["Level Soal"].str.split(",")
df_dosen_exploded = df_dosen.explode("Level Soal")
df_dosen_exploded["Level Soal"] = df_dosen_exploded["Level Soal"].str.strip()

# Hitung jumlah soal per dosen per level
dosen_level_counts = df_dosen_exploded.groupby(["Nama Dosen", "Level Soal"]).size().reset_index(name="Jumlah")

# Buat pivot table untuk heatmap
pivot_table = dosen_level_counts.pivot(index="Nama Dosen", columns="Level Soal", values="Jumlah").fillna(0)

# Visualisasi heatmap
plt.figure(figsize=(10, 6))
sns.heatmap(pivot_table, annot=True, fmt=".0f", cmap="YlGnBu", cbar_kws={"label": "Jumlah Soal"})
plt.title("Jumlah Soal per Level Kognitif oleh Dosen")
plt.xlabel("Level Kognitif")
plt.ylabel("Nama Dosen")
plt.tight_layout()
plt.show()

"""6. Hubungkan dengan Dataset dari URL Sharing dengan GDrive (kelas Regular)"""

#https://drive.google.com/file/d/1YH6ej7nR3fS_KeJhONaYvO_lJUt84Ukf/view?usp=sharing
fileDownloaded = drive.CreateFile({'id':'1YH6ej7nR3fS_KeJhONaYvO_lJUt84Ukf'})

"""7. Tampilkan Datasetnya (Regular)"""

fileDownloaded.GetContentFile('uts_regular_sains_data.csv')
# Load the dataset
file_path1 = 'uts_regular_sains_data.csv'  # Update with your file path
df = pd.read_csv(file_path1)
df.head()

"""8. Statistik Secara Keseluruhan"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load data
#df = pd.read_csv("uts_reguler_sains_data.csv")

# Hapus kolom non-numerik untuk analisis
numeric_df = df.drop(columns=["NIM", "Nama_Mahasiswa"])

# Statistik deskriptif
desc_stats = numeric_df.describe()
print("Statistik Deskriptif:")
print(desc_stats)

# Korelasi antar mata kuliah
correlation_matrix = numeric_df.corr()
print("\nMatriks Korelasi:")
print(correlation_matrix)

# Visualisasi
plt.figure(figsize=(18, 10))

# Boxplot
plt.subplot(2, 2, 1)
sns.boxplot(data=numeric_df)
plt.title("Boxplot Nilai per Mata Kuliah")
plt.xticks(rotation=45)
short_columns = {
    "Web_Client_Development": "WCD",
    "Object_Oriented_Programming": "OOP",
    "Data_Structures": "DS",
    "Database_Systems": "DB",
    "Statistical_Thinking": "ST",
    "Data_Wrangling": "DW",
    "Communication_Protocols": "CP"
}
numeric_df_short = numeric_df.rename(columns=short_columns)

# Histogram
plt.subplot(2, 2, 2)
numeric_df_short.hist(bins=10, edgecolor='black', figsize=(12, 6), layout=(3, 7))
plt.suptitle("Distribusi Nilai per Mata Kuliah (Singkatan)", fontsize=16)

# Heatmap Korelasi
plt.subplot(2, 1, 2)
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title("Matriks Korelasi antar Mata Kuliah")

plt.tight_layout(rect=[0, 0, 1, 0.95])
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# Ubah format data menjadi long format
melted_df = df.melt(id_vars=["NIM", "Nama_Mahasiswa"],
                    var_name="Mata_Kuliah",
                    value_name="Nilai")

# Filter nilai di bawah 60
nilai_bawah_60 = melted_df[melted_df["Nilai"] < 60]

# Kelompokkan berdasarkan mata kuliah dan hitung jumlah serta nama mahasiswa
hasil = nilai_bawah_60.groupby("Mata_Kuliah").agg(
    Jumlah_Mahasiswa=("Nama_Mahasiswa", "count"),
    Nama_Mahasiswa=("Nama_Mahasiswa", list)
).reset_index()

# Tampilkan hasil
print(hasil)

# Plot grafik
plt.figure(figsize=(10, 6))
plt.bar(hasil['Mata_Kuliah'], hasil['Jumlah_Mahasiswa'], color='skyblue')
plt.xlabel('Mata Kuliah')
plt.ylabel('Jumlah Mahasiswa dengan Nilai < 60')
plt.title('Jumlah Mahasiswa dengan Nilai di Bawah 60 per Mata Kuliah')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

!pip install plotly

import pandas as pd
import plotly.express as px


# Ubah ke format long
melted_df = df.melt(id_vars=["NIM", "Nama_Mahasiswa"],
                    var_name="Mata_Kuliah",
                    value_name="Nilai")

# Filter nilai < 60
nilai_bawah_60 = melted_df[melted_df["Nilai"] < 60]

# Kelompokkan dan susun data
hasil = nilai_bawah_60.groupby("Mata_Kuliah").agg(
    Jumlah_Mahasiswa=("Nama_Mahasiswa", "count"),
    Nama_Mahasiswa=("Nama_Mahasiswa", lambda x: "<br>".join(x))  # Buat list nama jadi HTML-friendly
).reset_index()

# Plot grafik interaktif dengan tooltip yang menampilkan nama mahasiswa
fig = px.bar(
    hasil,
    x="Mata_Kuliah",
    y="Jumlah_Mahasiswa",
    hover_data={"Nama_Mahasiswa": True, "Jumlah_Mahasiswa": False},
    labels={"Jumlah_Mahasiswa": "Jumlah Mahasiswa"},
    title="Jumlah Mahasiswa dengan Nilai < 60 per Mata Kuliah",
    text="Jumlah_Mahasiswa"
)

fig.update_traces(textposition='outside')
fig.update_layout(
    xaxis_title="Mata Kuliah",
    yaxis_title="Jumlah Mahasiswa",
    hoverlabel=dict(bgcolor="white", font_size=12),
    margin=dict(t=70, b=100),
)

fig.show()

# Tampilkan tabel
tabel = nilai_bawah_60[["Mata_Kuliah", "Nama_Mahasiswa", "Nilai"]].sort_values(by=["Mata_Kuliah", "Nilai"])
print(tabel.to_string(index=False))

"""9. Hubungkan dengan Dataset Kelas Pro dan Aksel"""

#https://drive.google.com/file/d/11lrDx-A0r_hK5MOrmmeqiJJ1mNK2ZljR/view?usp=sharing
fileDownloaded1 = drive.CreateFile({'id':'11lrDx-A0r_hK5MOrmmeqiJJ1mNK2ZljR'})

"""10. Tampilkan dataset (Kelas Pro)"""

fileDownloaded1.GetContentFile('uts_pro_sains_data.csv')
# Load the dataset
file_path2 = 'uts_pro_sains_data.csv'  # Update with your file path
df2 = pd.read_csv(file_path2)
df2.head()

"""11. Statistik Secara Keseluruhan (Dataset Pro dan Aksel)"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load data
#df = pd.read_csv("uts_reguler_sains_data.csv")

# Hapus kolom non-numerik untuk analisis
numeric_df = df2.drop(columns=["NIM", "Nama_Mahasiswa"])

# Statistik deskriptif
desc_stats = numeric_df.describe()
print("Statistik Deskriptif:")
print(desc_stats)

# Korelasi antar mata kuliah
correlation_matrix = numeric_df.corr()
print("\nMatriks Korelasi:")
print(correlation_matrix)

# Visualisasi
plt.figure(figsize=(18, 10))

# Boxplot
plt.subplot(2, 2, 1)
sns.boxplot(data=numeric_df)
plt.title("Boxplot Nilai per Mata Kuliah")
plt.xticks(rotation=45)
short_columns = {
    "Web_Client_Development": "WCD",
    "Object_Oriented_Programming": "OOP",
    "Data_Structures": "DS",
    "Database_Systems": "DB",
    "Statistical_Thinking": "ST",
    "Data_Wrangling": "DW",
    "Communication_Protocols": "CP"
}
numeric_df_short = numeric_df.rename(columns=short_columns)

# Histogram
plt.subplot(2, 2, 2)
numeric_df_short.hist(bins=10, edgecolor='black', figsize=(12, 6), layout=(3, 7))
plt.suptitle("Distribusi Nilai per Mata Kuliah (Singkatan)", fontsize=16)

# Heatmap Korelasi
plt.subplot(2, 1, 2)
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title("Matriks Korelasi antar Mata Kuliah")

plt.tight_layout(rect=[0, 0, 1, 0.95])
plt.show()

import pandas as pd
import plotly.express as px


# Ubah ke format long
melted_df = df2.melt(id_vars=["NIM", "Nama_Mahasiswa"],
                    var_name="Mata_Kuliah",
                    value_name="Nilai")

# Filter nilai < 60
nilai_bawah_60 = melted_df[melted_df["Nilai"] < 60]

# Kelompokkan dan susun data
hasil = nilai_bawah_60.groupby("Mata_Kuliah").agg(
    Jumlah_Mahasiswa=("Nama_Mahasiswa", "count"),
    Nama_Mahasiswa=("Nama_Mahasiswa", lambda x: "<br>".join(x))  # Buat list nama jadi HTML-friendly
).reset_index()

# Plot grafik interaktif dengan tooltip yang menampilkan nama mahasiswa
fig = px.bar(
    hasil,
    x="Mata_Kuliah",
    y="Jumlah_Mahasiswa",
    hover_data={"Nama_Mahasiswa": True, "Jumlah_Mahasiswa": False},
    labels={"Jumlah_Mahasiswa": "Jumlah Mahasiswa"},
    title="Jumlah Mahasiswa dengan Nilai < 60 per Mata Kuliah",
    text="Jumlah_Mahasiswa"
)

fig.update_traces(textposition='outside')
fig.update_layout(
    xaxis_title="Mata Kuliah",
    yaxis_title="Jumlah Mahasiswa",
    hoverlabel=dict(bgcolor="white", font_size=12),
    margin=dict(t=70, b=100),
)

fig.show()

# Tampilkan tabel
tabel = nilai_bawah_60[["Mata_Kuliah", "Nama_Mahasiswa", "Nilai"]].sort_values(by=["Mata_Kuliah", "Nilai"])
print(tabel.to_string(index=False))

"""12. Fungsi untuk menampilkan nilai Seluruh Mata Kuliah dari seorang Mahasiswa berdasarkan nama (Kelas Regular)"""

import pandas as pd
import plotly.express as px

# Load data nilai mahasiswa
#df = pd.read_csv("uts_reguler_sains_data.csv")

def tampilkan_nilai_mahasiswa(nama_mahasiswa):
    # Filter data berdasarkan nama mahasiswa
    data_mahasiswa = df[df["Nama_Mahasiswa"].str.lower() == nama_mahasiswa.lower()]

    if data_mahasiswa.empty:
        print("Mahasiswa tidak ditemukan.")
        return

    # Ambil data nilai dan transpos
    nilai_mata_kuliah = data_mahasiswa.drop(columns=["NIM", "Nama_Mahasiswa"]).T
    nilai_mata_kuliah.columns = ["Nilai"]
    nilai_mata_kuliah["Mata Kuliah"] = nilai_mata_kuliah.index
    nilai_mata_kuliah.reset_index(drop=True, inplace=True)

    # Hitung rata-rata
    rata_rata = nilai_mata_kuliah["Nilai"].mean()

    # Tampilkan tabel nilai
    print(f"\nNilai Mahasiswa: {nama_mahasiswa}")
    print(nilai_mata_kuliah)
    print(f"\nRata-rata Nilai: {rata_rata:.2f}")

    # Visualisasi nilai
    fig = px.bar(
        nilai_mata_kuliah,
        x="Mata Kuliah",
        y="Nilai",
        title=f"Nilai Mata Kuliah - {nama_mahasiswa}",
        text="Nilai",
        range_y=[0, 100],
        color="Nilai",
        color_continuous_scale="RdYlGn"
    )
    fig.update_traces(textposition="outside")
    fig.update_layout(xaxis_tickangle=-45)
    fig.show()

# Contoh pemanggilan fungsi
tampilkan_nilai_mahasiswa("SAMUEL CHRISTIAN SITINJAK")  # Ganti dengan nama lain sesuai dataset

"""13. Fungsi untuk menampilkan nilai Seluruh Mata Kuliah dari seorang Mahasiswa berdasarkan nama (Kelas Pro dan Aksel)"""

import pandas as pd
import plotly.express as px

# Load data nilai mahasiswa
#df = pd.read_csv("uts_reguler_sains_data.csv")

def tampilkan_nilai_mahasiswa(nama_mahasiswa):
    # Filter data berdasarkan nama mahasiswa
    data_mahasiswa = df2[df2["Nama_Mahasiswa"].str.lower() == nama_mahasiswa.lower()]

    if data_mahasiswa.empty:
        print("Mahasiswa tidak ditemukan.")
        return

    # Ambil data nilai dan transpos
    nilai_mata_kuliah = data_mahasiswa.drop(columns=["NIM", "Nama_Mahasiswa"]).T
    nilai_mata_kuliah.columns = ["Nilai"]
    nilai_mata_kuliah["Mata Kuliah"] = nilai_mata_kuliah.index
    nilai_mata_kuliah.reset_index(drop=True, inplace=True)

    # Hitung rata-rata
    rata_rata = nilai_mata_kuliah["Nilai"].mean()

    # Tampilkan tabel nilai
    print(f"\nNilai Mahasiswa: {nama_mahasiswa}")
    print(nilai_mata_kuliah)
    print(f"\nRata-rata Nilai: {rata_rata:.2f}")

    # Visualisasi nilai
    fig = px.bar(
        nilai_mata_kuliah,
        x="Mata Kuliah",
        y="Nilai",
        title=f"Nilai Mata Kuliah - {nama_mahasiswa}",
        text="Nilai",
        range_y=[0, 100],
        color="Nilai",
        color_continuous_scale="RdYlGn"
    )
    fig.update_traces(textposition="outside")
    fig.update_layout(xaxis_tickangle=-45)
    fig.show()

# Contoh pemanggilan fungsi
tampilkan_nilai_mahasiswa("PEBRY ZAUHARY")  # Ganti dengan nama lain sesuai dataset